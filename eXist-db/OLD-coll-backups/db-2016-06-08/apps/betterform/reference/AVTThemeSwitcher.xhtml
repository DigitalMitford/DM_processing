<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:bf="http://betterform.sourceforge.net/xforms" xmlns:xf="http://www.w3.org/2002/xforms" bf:evalAVTs="class style"><head><meta http-equiv="Content-Type" content="text/xml; charset=UTF-8"/><title>AVT Theme Switcher</title>
      
      
      <!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
--><style type="text/css">
            @import "../../bfResources/scripts/dijit/themes/tundra/tundra.css";
            @import "../../bfResources/scripts/dijit/themes/soria/soria.css";
            @import "../../bfResources/scripts/dijit/themes/claro/claro.css";

            .tundra h1, .soria h1, .claro h1 {
                font-size: 20pt;
            }

            .bfVerticalTable .xfControl {
                margin: 10px;
            }

            .bfVerticalTable .xfSelect1 {
                margin-top: 0;
            }
			.bfVerticalTableLabel{
				vertical-align:middle;
			}
			.bfVerticalTableInfo{display:none;}
            .claro .xfInput .xfValue{height:1.6em;}
        </style><link rel="stylesheet" type="text/css" href="../../bfResources/scripts/dojox/highlight/resources/highlight.css"/><link rel="stylesheet" type="text/css" href="reference.css"/></head><body class="{theme} InlineAlert bf" style="margin:30px"><div id="xforms"><div style="display:none"><xf:model><xf:instance id="instance-1"><avt xmlns=""><theme>tundra</theme><date>2012-01-01</date><time>11:12:23</time></avt></xf:instance><xf:bind nodeset="date" type="date"/><xf:bind nodeset="time" type="time"/></xf:model></div><div class="pageintro"><h1>AVT Theme Switcher</h1><div class="description"><p>This page demonstrates the use of Attribute Value Templates (AVT) as known from XSL.
                  By putting an attribute value inside of curly brackets you signal to the processor
                  to evaluate the contents as an XPath expression.
               </p><p>AVTs can be used to dynamically style a page dependent on some instance data. The
                  example below switches between the main Dojo themes available.
               </p><p>AVTs in betterFORM are operating on the host document, this means that classes added
                  in XSLt or JavaScript will be lost if the AVT changes during runtime (due to the host
                  document does not know about CSS classes added later on)
               </p></div></div><h2>Example</h2><div class="Section sample"><xf:group id="outer" appearance="bf:verticalTable"><xf:select1 id="select" ref="theme" appearance="full" incremental="true"><xf:label>Switch Theme</xf:label><xf:item><xf:label>claro</xf:label><xf:value>claro</xf:value></xf:item><xf:item><xf:label>soria</xf:label><xf:value>soria</xf:value></xf:item><xf:item><xf:label>tundra</xf:label><xf:value>tundra</xf:value></xf:item></xf:select1><xf:input ref="date"><xf:label>Date:</xf:label></xf:input><xf:input ref="time" appearance="bf:timetextbox"><xf:label>Time:</xf:label></xf:input><xf:output id="input1" ref="theme"><xf:label>current theme</xf:label></xf:output></xf:group></div><h2>XForms Markup</h2><div class="Section markup"><pre><code class="xml" data-dojo-type="dojox.highlight.Code">
&lt;html bf:evalAVTs="class style"&gt;
    &lt;body class="{theme}"&gt;...&lt;/body&gt;
&lt;/html&gt;

&lt;xf:instance id="instance-1"&gt;
    &lt;avt&gt;
        &lt;theme&gt;tundra&lt;/theme&gt;
        &lt;date&gt;2012-01-01&lt;/date&gt;
        &lt;time&gt;11:12:23&lt;/time&gt;
    &lt;/avt&gt;
&lt;/xf:instance&gt;

&lt;xf:group id="outer" appearance="bf:verticalTable"&gt;
    &lt;xf:select1 id="select" ref="theme" appearance="full" incremental="true"&gt;
        &lt;xf:label&gt;Switch Theme&lt;/xf:label&gt;
        &lt;xf:item&gt;
            &lt;xf:label&gt;claro&lt;/xf:label&gt;
            &lt;xf:value&gt;claro&lt;/xf:value&gt;
        &lt;/xf:item&gt;
        &lt;xf:item&gt;
            &lt;xf:label&gt;soria&lt;/xf:label&gt;
            &lt;xf:value&gt;soria&lt;/xf:value&gt;
        &lt;/xf:item&gt;
        &lt;xf:item&gt;
            &lt;xf:label&gt;tundra&lt;/xf:label&gt;
            &lt;xf:value&gt;tundra&lt;/xf:value&gt;
        &lt;/xf:item&gt;
    &lt;/xf:select1&gt;

    &lt;xf:input ref="date"&gt;
        &lt;xf:label&gt;Date:&lt;/xf:label&gt;
    &lt;/xf:input&gt;
    &lt;xf:input ref="time" appearance="bf:timetextbox"&gt;
        &lt;xf:label&gt;Time:&lt;/xf:label&gt;
    &lt;/xf:input&gt;

    &lt;xf:output id="input1" ref="theme"&gt;
        &lt;xf:label&gt;current theme&lt;/xf:label&gt;
    &lt;/xf:output&gt;

&lt;/xf:group&gt;
</code></pre></div><h2>Limitations</h2><div class="limitations"><p>
               AVTs do not work inside of the <span class="keyword">class</span> attribute on xforms UI elements as it
               would overwrite the state classes that are computed to reflect the control status.
               
            </p><p>
               It is easy to work around this restriction by simply wrapping the wanted element inside
               of a 
               <span class="keyword">span</span> or <span class="keyword">div</span>.
               
            </p></div></div><script type="text/javascript">
                function showClass(cssClass) {
                    require(["dojo/query", "dojo/dom-class"], function (query, domClass) {
                        query('.sample .' + cssClass).forEach(function (item) {
                            domClass.add(item, 'showClass');
                        });
                    });
                }

                function hideClass(cssClass) {
                    require(["dojo/query", "dojo/dom-class"], function (query, domClass) {
                        query('.sample .' + cssClass).forEach(function (item) {
                            domClass.remove(item, 'showClass');
                        });
                    });
                }

                require(["dojo/parser", "dojo/_base/connect", "dijit/Tooltip", "dojo/dom", "dojox/highlight", "dojox/highlight/languages/_all", "dojox/highlight/widget/Code", "dojo/domReady!"],
                        function (parser, connect, Tooltip, dom) {
                            var xforms = dom.byId("xforms");
                            // console.debug("parse ",xforms);
                            parser.parse(xforms);
                            connect.subscribe("/xf/ready", function () {
                                fluxProcessor.skipshutdown = true;
                            });
                        }
                );
            </script></body></html>