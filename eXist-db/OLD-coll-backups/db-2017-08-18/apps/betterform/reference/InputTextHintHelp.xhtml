<?xml version="1.0" encoding="UTF-8"?>
<!-- LARS: what is the purpose of this form?? Can it be deleted?
      TODO: delete request
  --><html xmlns="http://www.w3.org/1999/xhtml" xmlns:xf="http://www.w3.org/2002/xforms"><head><meta http-equiv="Content-Type" content="text/xml; charset=UTF-8"/><title>Text input control with alert, hint and help</title>
      
      
      <!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
--><link rel="stylesheet" type="text/css" href="../../bfResources/scripts/dojox/highlight/resources/highlight.css"/><link rel="stylesheet" type="text/css" href="reference.css"/></head><body class="soria" style="margin:30px"><div id="xforms"><div style="display:none"><xf:model><xf:instance><data xmlns=""><input1 constraint="true" readonly="false" required="true" relevant="true"><value/></input1></data></xf:instance><xf:bind nodeset="input1"><xf:bind nodeset="value" constraint="boolean-from-string(../@constraint)" readonly="boolean-from-string(../@readonly)" required="boolean-from-string(../@required)" relevant="boolean-from-string(../@relevant)" type="string"/><xf:bind nodeset="@constraint" type="boolean"/><xf:bind nodeset="@readonly" type="boolean"/><xf:bind nodeset="@required" type="boolean"/><xf:bind nodeset="@relevant" type="boolean"/></xf:bind></xf:model></div><div class="CSS"><table><caption>CSS</caption><tr><th style="font-style:italic;color:#C46B47;">
                     Hover the classes to see matching element(s) in the example
                     
                  </th></tr><tr><td id="d41e139" onmouseover="showClass('xfInput');" onmouseout="hideClass('xfInput');">xfInput
                     <div data-dojo-type="dijit.Tooltip" connectId="d41e139">matches an Element that represents a XForms input element</div></td></tr><tr><td id="xfcontrol" onmouseover="showClass('xfControl');" onmouseout="hideClass('xfControl');">xfControl
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfcontrol">
                        matches an Element that represents a XForms control
                        
                     </div></td></tr><tr><td id="xflabel" onmouseover="showClass('xfLabel');" onmouseout="hideClass('xfLabel');">xfLabel
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xflabel">
                        matches the label part of an XForms control
                        
                     </div></td></tr><tr><td id="xfvalue" onmouseover="showClass('xfValue');" onmouseout="hideClass('xfValue');">xfValue
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfvalue">
                        matches the widget part of an XForms control
                        
                     </div></td></tr><tr><td id="xfreadonly" onmouseover="showClass('xfReadOnly');" onmouseout="hideClass('xfReadOnly');">
                     xfReadOnly
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfreadonly">
                        matches a xforms control that is currently readonly
                        
                     </div></td></tr><tr><td id="xfreadwrite" onmouseover="showClass('xfReadWrite');" onmouseout="hideClass('xfReadWrite');">
                     xfReadWrite
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfreadwrite">
                        matches a xforms control that is currently writable
                        
                     </div></td></tr><tr><td id="xfrequired" onmouseover="showClass('xfRequired');" onmouseout="hideClass('xfRequired');">
                     xfRequired
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfrequired">
                        matches a xforms control that is currently required
                        
                     </div></td></tr><tr><td id="xfoptional" onmouseover="showClass('xfOptional');" onmouseout="hideClass('xfOptional');">
                     xfOptional
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfoptional">
                        matches a xforms control that is currently optional
                        
                     </div></td></tr><tr><td id="xfenabled" onmouseover="showClass('xfEnabled');" onmouseout="hideClass('xfEnabled');">
                     xfEnabled
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfenabled">
                        matches a xforms control that is currently relevant (enabled)
                        
                     </div></td></tr><tr><td id="xfdisabled" onmouseover="showClass('xfDisabled');" onmouseout="hideClass('xfDisabled');">
                     xfDisabled
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfdisabled">
                        matches a xforms control that is currently disabled (can't be visualized here as the
                        control gets hidden)
                        
                     </div></td></tr><tr><td id="xfvalid" onmouseover="showClass('xfValid');" onmouseout="hideClass('xfValid');">
                     xfValid
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfvalid">
                        matches a xforms control that is currently valid
                        
                     </div></td></tr><tr><td id="xfinvalid" onmouseover="showClass('xfInvalid');" onmouseout="hideClass('xfInvalid');">
                     xfInvalid
                     
                     <div data-dojo-type="dijit.Tooltip" connectId="xfinvalid">
                        matches a xforms control that is currently invalid
                        
                     </div></td></tr></table></div><div class="pageintro"><h1>Text input control with alert, hint and help</h1><div class="description"><p>An input element with full set of common child elements.</p></div></div><h2>Example</h2><div class="Section sample"><xf:group><xf:input ref="input1/value" incremental="true"><xf:label>a text</xf:label><xf:hint>typical hint is not much more than this</xf:hint><xf:help>help for input1 -<br/>This commonly a more long text<b>sometimes</b>even with markup.
                  </xf:help><xf:alert>In this case the author was not a lazy man and gave us detailed instruction. And he
                     probably even invites you to dinner. But even this does not make a bar of gold of
                     a swine.
                  </xf:alert></xf:input><xf:input id="input1" ref="input1/value" incremental="true"><xf:label>a text</xf:label><xf:hint>Hint for this input with some more text than usual. But sometime you have to say more
                     and more - and nobody will listen anyway. But to test or not to test is not the question
                  </xf:hint><xf:help>help for input1 -<br/>This commonly a more long text<b>sometimes</b>even with markup.
                  </xf:help><xf:alert>invalid</xf:alert></xf:input></xf:group></div><div class="MIPS"><xf:group appearance="full"><xf:label/><xf:input id="input1-readonly" ref="input1/@readonly" incremental="true"><xf:label>readonly</xf:label></xf:input><xf:input id="input1-required" ref="input1/@required" incremental="true"><xf:label>required</xf:label></xf:input><xf:input id="input1-relevant" ref="input1/@relevant" incremental="true"><xf:label>relevant</xf:label></xf:input><xf:input id="input1-valid" ref="input1/@constraint" incremental="true"><xf:label>valid</xf:label></xf:input></xf:group></div><h2>XForms Markup</h2><div class="Section markup"><pre><code class="xml" data-dojo-type="dojox.highlight.Code">
&lt;xf:group&gt;
    &lt;xf:input ref="input1/value" incremental="true"&gt;
        &lt;xf:label&gt;a text&lt;/xf:label&gt;
        &lt;xf:hint&gt;typical hint is not much more than this&lt;/xf:hint&gt;
        &lt;xf:help&gt;help for input1 - &lt;br&gt;&lt;/br&gt; This commonly a more long text &lt;b&gt;sometimes&lt;/b&gt; even with markup.&lt;/xf:help&gt;
        &lt;xf:alert&gt;In this case the author was not a lazy man and gave us detailed instruction. And he probably even
        invites you to dinner. But even this does not make a bar of gold of a swine.&lt;/xf:alert&gt;
    &lt;/xf:input&gt;
    &lt;xf:input id="input1" ref="input1/value" incremental="true"&gt;
        &lt;xf:label&gt;a text&lt;/xf:label&gt;
        &lt;xf:hint&gt;Hint for this input with some more text than usual. But sometime you have to say more and more - and nobody will listen anyway. But
        to test or not to test is not the question&lt;/xf:hint&gt;
        &lt;xf:help&gt;help for input1 - &lt;br&gt;&lt;/br&gt; This commonly a more long text &lt;b&gt;sometimes&lt;/b&gt; even with markup.&lt;/xf:help&gt;
        &lt;xf:alert&gt;invalid&lt;/xf:alert&gt;
    &lt;/xf:input&gt;
&lt;/xf:group&gt;
</code></pre></div></div><script type="text/javascript">
                function showClass(cssClass) {
                    require(["dojo/query", "dojo/dom-class"], function (query, domClass) {
                        query('.sample .' + cssClass).forEach(function (item) {
                            domClass.add(item, 'showClass');
                        });
                    });
                }

                function hideClass(cssClass) {
                    require(["dojo/query", "dojo/dom-class"], function (query, domClass) {
                        query('.sample .' + cssClass).forEach(function (item) {
                            domClass.remove(item, 'showClass');
                        });
                    });
                }

                require(["dojo/parser", "dojo/_base/connect", "dijit/Tooltip", "dojo/dom", "dojox/highlight", "dojox/highlight/languages/_all", "dojox/highlight/widget/Code", "dojo/domReady!"],
                        function (parser, connect, Tooltip, dom) {
                            var xforms = dom.byId("xforms");
                            // console.debug("parse ",xforms);
                            parser.parse(xforms);
                            connect.subscribe("/xf/ready", function () {
                                fluxProcessor.skipshutdown = true;
                            });
                        }
                );
            </script></body></html>