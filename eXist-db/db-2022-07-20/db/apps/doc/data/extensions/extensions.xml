<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?><?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml"
        schematypens="http://purl.oclc.org/dsdl/schematron"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>Extension Modules</title>
        <date>2Q21</date>
        <keywordset>
            <keyword>java-development</keyword>
        </keywordset>
    </info>

    <!-- ================================================================== -->

    <para>This article provides an overview of how to create XQuery extension modules (in Java) for
        eXist-db, and contains a list of extension modules which have additional configuration
        options.</para>

    <!-- ================================================================== -->

    <sect1 xml:id="module_intro">
        <title>Introduction</title>

        <para>eXist-db provides a pluggable module interface that allows extension modules to be
            easily developed in Java. These extension modules can provide additional XQuery
            functions through a custom namespace. The extension modules have full access to the
            eXist-db database, its internal API, the context of the executing XQuery and the HTTP
            Session (if appropriate).</para>
        <para>The source code for extension modules should be placed in their own folder inside
            <literal>$EXIST_HOME/extensions/modules/*/src/main/java/org/exist/xquery/modules/*</literal>.
            They may then be added to <literal>$EXIST_HOME/extensions/modules/pom.xml</literal> and
            compiled in place using <literal>mvn compile</literal>.</para>
        <para>Modules associated with modularized indexes must be placed in the
                <literal>$EXIST_HOME/extensions/indexes/*/xquery/modules/*</literal> hierarchy. They
            may then be added to <literal>$EXIST_HOME/extensions/indexes/pom.xml</literal>. They
            will be compiled automatically by the standard build targets or as indicated
            above.</para>
        <para>eXist-db must also be told which modules to load at startup, this is done in
                <literal>conf.xml</literal> and the Class name and Namespace for each module is
            listed below. </para>
        <note>
            <para>eXist-db will require a restart to load any new modules added. </para>
        </note>
        <para>Once a Module is configured and loaded eXist-db will display the module and its
            function definitions as part of the <link xlink:href="{fundocs}">function
            library</link> page or through <literal>util:decribe-function()</literal>.</para>
    </sect1>

    <!-- ================================================================== -->

    <sect1 xml:id="ext-modules">
        <title>Extension Modules Configuration</title>
        <para>Whilst most extension modules work without any further configuration than that
            described above, some modules have additional configuration options. Those additional
            options are described in this section.</para>
        <sect2 xml:id="module_cache">
            <title>Cache Module</title>
            <para>This module provides a Global Mutable cache which can be used for manually
                caching data. This is often used for caching the results of expensive queries.</para>
            <itemizedlist>
                <listitem>
                    <para>Creator: Adam Retter</para>
                </listitem>
                <listitem>
                    <para>Licence: LGPL v2</para>
                </listitem>
                <listitem>
                    <para>Used: <link xlink:href="https://github.com/ben-manes/caffeine">Caffeine</link></para>
                </listitem>
                <listitem>
                    <para>Status: production</para>
                </listitem>
                <listitem>
                    <para>Class: <code>org.exist.xquery.modules.cache.CacheModule</code>
                    </para>
                </listitem>
                <listitem>
                    <para>Namespace: <code>http://exist-db.org/xquery/cache</code></para>
                </listitem>
            </itemizedlist>
            <para>
                The Cache module can be configured for with a bounded size, or time, or both. eXist-db cannot
                know how much memory the data you will put in the cache will take, so it is up to you to
                manage your own memory needs here.
            </para>
            <para>A named cache can either be explicitly created by calling the <code>cache:create</code> XQuery
                function, or it can be implicitly created lazing on the first operation performed on the cache.
                Configuration of the Cache module is specified within the module definition of eXist-db's
                <code>conf.xml</code> file:</para>
            <programlisting language="xml" xlink:href="listings/listing-2.xml"/>
        </sect2>
        <sect2 xml:id="module_sql">
            <title>SQL Module</title>
            <para>This module provides facilities for performing SQL operations against traditional
                databases from XQuery and returning the results as XML nodes.</para>
            <itemizedlist>
                <listitem>
                    <para>Creator: Adam Retter</para>
                </listitem>
                <listitem>
                    <para>Licence: LGPL v2</para>
                </listitem>
                <listitem>
                    <para>Used: <link xlink:href="https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/">JDBC</link></para>
                </listitem>
                <listitem>
                    <para>Status: production</para>
                </listitem>
                <listitem>
                    <para>Class: <code>org.exist.xquery.modules.sql.SQLModule</code>
                    </para>
                </listitem>
                <listitem>
                    <para>Namespace: <code>http://exist-db.org/xquery/sql</code></para>
                </listitem>
            </itemizedlist>
            <para>
                The SQL Module can be configured with additional which allow Connection Pooling of the SQL connections to be utilised.
                For this purpose the <link xlink:href="https://github.com/brettwooldridge/HikariCP">HikariCP</link> connection pool implementation is used.
            </para>
            <para>Multiple connection pools can be configured and used from XQuery via the <code>sql:get-connection-from-pool</code> function.</para>
            <para>All of HikariCP's <link xlink:href="https://github.com/brettwooldridge/HikariCP#gear-configuration-knobs-baby">configuration options</link>
                can be configured on a per-pool basis. Configuration of the connection pools is specified within the module definition of eXist-db's
                <code>conf.xml</code> file:</para>
            <programlisting language="xml" xlink:href="listings/listing-1.xml"/>
            <note><para>Any JDBC drivers that are used will need to be added to eXist-db's <code>lib/</code> folder and configured in the startup descriptor XML file in eXist-db's <code>etc/</code> folder.</para></note>
        </sect2>
    </sect1>
</article>