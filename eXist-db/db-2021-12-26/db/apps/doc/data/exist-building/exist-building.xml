<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?><?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml"
        schematypens="http://purl.oclc.org/dsdl/schematron"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">

  <info>
    <title>Building eXist-db</title>
    <date>2Q19</date>
    <keywordset>
      <keyword>operations</keyword>
      <keyword>java-development</keyword>
    </keywordset>
  </info>
  <!-- ================================================================== -->

  <para>This article will tell you how to build eXist-db from source, please also check the <link xlink:href="https://github.com/eXist-db/exist/blob/develop/BUILD.md">build instructions</link>
    in the source-code repo.</para>

  <!-- ================================================================== -->

  <sect1 xml:id="GitHub">
    <title>Building eXist-db from GitHub</title>

    <para>Building eXist-db is quite easy and requires 3 simple steps:</para>
    <orderedlist>
      <listitem>
        <para>
          <emphasis role="bold">Make sure you have the required build tools installed</emphasis>
        </para>
          <itemizedlist>
            <listitem>
              <para>Java JDK - Building eXist-db requires JDK 8 or newer. If you are looking for an OpenJDK, then the <link xlink:href="https://www.azul.com/downloads/zulu/">Azul Zulu JDK</link> may suite you.</para>
            </listitem>
            <listitem>
              <para>Apache Maven - Building eXist-db requires <link xlink:href="https://maven.apache.org/">Maven 3.6.0 or newer</link>.</para>
            </listitem>
            <listitem>
              <para>Docker (<emphasis>optional</emphasis>) - If you wish to build the Docker image, then <link xlink:href="https://www.docker.com/">Docker</link> is required.</para>
            </listitem>
            <listitem>
              <para>HFS Support (<emphasis>optional</emphasis>) - If you are on Linux and wish to build a DMG for Mac platforms.</para>
              <itemizedlist>
                <listitem>
                  <para>CentOS etc. - <code>sudo yum install hfsutils hfsplus-tools</code></para>
                </listitem>
                <listitem>
                  <para>Debian etc. - <code>sudo apt-get install hfsprogs hfsplus</code></para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>Apple Developer Code signing certificate (<emphasis>optional</emphasis>) - If you are on a Mac and wish to build and sign a DMG.</para>
            </listitem>
          </itemizedlist>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Clone from Github</emphasis>
        </para>
        <para>The GitHub URL for the develop branch is:</para>
        <programlisting>https://github.com/eXist-db/exist.git</programlisting>
        <para>Please follow the instructions on <link xlink:href="https://github.com/eXist-db/exist" condition="_blank">our GitHub page</link> page (<link xlink:href="https://github.com/eXist-db/exist/blob/develop/README.md" condition="_blank">
                        <code>README.md</code>
                    </link> section)</para>
        <para>You can clone it by running:</para>
        <programlisting>git clone --single-branch --branch=develop https://github.com/eXist-db/exist.git</programlisting>
        <note><para>The above will only clone the <code>develop</code> branch, if you require all branches, you should omit the <code>--single-branch --branch=develop</code> arguments.</para></note>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Set <code>JAVA_HOME</code>
                    </emphasis>
        </para>
        <para>Before starting the build, your <code>JAVA_HOME</code> environment variable should be
          set to point to the root directory of the JAVA JDK (note: JDK, not JRE!). Open a console on Unix/Linux, or a DOS cmd prompt on
          Windows and type:</para>
        <programlisting>set JAVA_HOME=c:\path\to\jdk</programlisting>
        <para>on Windows or</para>
        <programlisting>export JAVA_HOME=/path/to/jdk</programlisting>
        <para>on Unix/Linux.</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Build eXist</emphasis>
        </para>
        <para>Change into the eXist-db directory you just checked out and call</para>
        <programlisting>mvn -DskipTests clean compile</programlisting>
      </listitem>
    </orderedlist>
  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="build-system">
    <title>Using the Build System</title>

    <para>You can rebuild all eXist-db packages and distributions from the cloned source code:</para>
    <programlisting>mvn -DskipTests clean package</programlisting>
    <para>This will create a fresh distributions in the <code>exist-distribution/target</code> directory, and a fresh installer in the <code>exist-installer/target</code> directory.</para>
    <note>
      <para>If you wish to also build a Docker image, you should add the property <code>-Ddocker=true</code>.</para>
      <para>If you wish to also build a signed DMG on Mac, you should add the properties <code>-Dmac-signing=true -Dmac.codesign.identity="The ID of your Apple Developer Certificate"</code>.</para>
    </note>
    <table>
      <title>Useful Maven targets</title>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>
              <para><code>mvn clean</code></para>
            </entry>
            <entry>
              <para>Cleans the files and directories generated by a previous build. Data is not preserved unless you have overriden the path to the data directory.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>mvn compile</code></para>
            </entry>
            <entry>
              <para>Recompiles any changed source code.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>mvn dependency:analyze</code></para>
            </entry>
            <entry>
              <para>Checks for any problems with the dependencies that eXist-db depends on.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>mvn test</code></para>
            </entry>
            <entry>
              <para>Runs all tests across all modules. Surefire HTML reports can be found in the modules <code>target/surefire-reports/html</code> folder.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>mvn install</code></para>
            </entry>
            <entry>
              <para>Installs all Maven artifacts to your local Maven repository (i.e. Unix/Linux: <code>~/.m2/repository</code>, or Windows: <code>%USERPROFILE%\.m2\repository</code>.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>mvn package</code></para>
            </entry>
            <entry>
              <para>Performs the full lifecycle build, after which eXist-db distributions can be found in <code>exist-distribution/target</code>, and an eXist-db IzPack installer can be found in <code>exist-installer/target</code>.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table>
      <title>Useful Maven properties and arguments</title>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>
              <para><code>-V</code></para>
            </entry>
            <entry>
              <para>Show the version of Maven and Java used for the build.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-o</code></para>
            </entry>
            <entry>
              <para>Execute Maven in offline (i.e. no Internet access!) mode.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-U</code></para>
            </entry>
            <entry>
              <para>Force Maven to check online for any updates to dependency versions.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-T</code></para>
            </entry>
            <entry>
              <para>Force Maven to execute the lifecycle for the reactor modules in parallel. For example <code>-T 2C</code> instructs Maven to use <emphasis>2x</emphasis> the core count of threads to parallelise the build. This can have a large positive imapact on build times.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-Ddocker=true</code></para>
            </entry>
            <entry>
              <para>Enable buiding eXist-db Docker images.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-Dmac.signing=true</code></para>
            </entry>
            <entry>
              <para>Enable signing of Mac <code>.app</code> and <code>.DMG</code> files (only on Mac platforms).</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-Dmac.codesign.identity="The ID of your Apple Developer
                  Certificate"</code></para>
            </entry>
            <entry>
              <para>Specify the certificate for signing of Mac <code>.app</code> and <code>.DMG</code> files (only on Mac platforms).</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-DskipTests</code></para>
            </entry>
            <entry>
              <para>Do not execute any tests.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-Ddependency-check.skip=true</code></para>
            </entry>
            <entry>
              <para>Skip the OWASP dependency security analysis.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-Dtest=MyTestClassName</code></para>
            </entry>
            <entry>
              <para>The name of a single test to run. If running Maven from the root of the project as opposed to inside the specific module which houses the test, you sould also add <code>-DfailIfNoTests=false</code>.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>-DtrimStackTrace=false</code></para>
            </entry>
            <entry>
              <para>When running tests, if a stacktrace is produced as part of an error, show the full output instead of trimming it.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para><code>MAVEN_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"</code></para>
            </entry>
            <entry>
              <para>When this precedes the <code>mvn</code> command, Maven will be run through the Java debugger, which allows you to connect from IntelliJ or another IDE which support JDWP.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </sect1>

</article>